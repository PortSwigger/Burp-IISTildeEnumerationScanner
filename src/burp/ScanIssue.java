package burp;

import java.net.URL;

class ScanIssue implements IScanIssue {
	private URL url;
	private IHttpService httpService;
	private IHttpRequestResponse[] httpMessages;

	public ScanIssue(IHttpService httpService, String url, IHttpRequestResponse[] httpMessages) {
		try {
			this.url = new URL(url);
			this.httpService = httpService;
			this.httpMessages = httpMessages;
		}
		catch (Exception e) {
			throw new RuntimeException("error while adding issue to Burp Issue Activity");
		}
	}

	@Override
	public URL getUrl() {
		return url;
	}

	@Override
	public String getIssueName() {
		return "IIS Tilde Enumeration";
	}

	@Override
	public int getIssueType() {
		return 0;
	}

	@Override
	public String getSeverity() {
		return "Medium";
	}

	@Override
	public String getConfidence() {
		return "Firm";
	}

	@Override
	public String getIssueBackground() {
		return "https://soroush.secproject.com/downloadable/microsoft_iis_tilde_character_vulnerability_feature.pdf";
	}

	@Override
	public String getRemediationBackground() {
		return "https://learn.microsoft.com/en-GB/troubleshoot/windows-server/performance/stop-error-code-0x00000019";
	}

	@Override
	public String getIssueDetail() {
		return "Microsoft Internet Information Server (IIS) suffers from a vulnerability which allows the detection of short names of files and directories which have en equivalent in the 8.3 version of the file naming scheme. By crafting specific requests containing the tilde '~â€˜ character, an attacker could leverage this vulnerability to find files or directories that are normally not visible and gain access to sensitive information. Given the underlying filesystem calls generated by the remote server, the attacker could also attempt a denial of service on the target application.";
	}

	@Override
	public String getRemediationDetail() {
		return "It is recommended to disable the 8.3 file and directories name creation and manually remove 8.3 names already present in the fileystem. If possible, upgrade to the latest version of the .NET framework and IIS server.";
	}

	@Override
	public IHttpRequestResponse[] getHttpMessages() {
		return httpMessages;
	}

	@Override
	public IHttpService getHttpService() {
		return httpService;
	}
}